{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Title/Title.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filter","contacts","createReducer","action","state","_","combineReducers","store","configureStore","reducer","phonebook","phonebookReducer","devTools","process","Form","InputValues","e","currentTarget","value","setState","preventDefault","checkName","props","contactList","chacNumer","toast","error","onSubmit","resetInputValues","idName","idNumber","className","s","form","this","htmlFor","labelName","type","onChange","autoComplete","labelNumber","pattern","btnForm","Component","connect","dispatch","phonebookAction","searchContact","target","console","log","containerSearch","labelSearch","inputSearch","getFilter","allContacts","filterValues","toLowerCase","includes","onDeleted","TransitionGroup","component","classNames","table","map","CSSTransition","timeout","unmountOnExit","btnList","onClick","Title","Phonebook","newName","some","Object","values","join","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","container","autoClose","in","appear","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2369031.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__13IiB\",\"labelName\":\"Form_labelName__2sjfV\",\"labelNumber\":\"Form_labelNumber__3ErLw\",\"btnForm\":\"Form_btnForm__1krfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSearch\":\"Filter_containerSearch__DcMFc\",\"labelSearch\":\"Filter_labelSearch__2etzV\",\"inputSearch\":\"Filter_inputSearch__N-tn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Title_appear__3tg_X\",\"appearActive\":\"Title_appearActive__ImnGi\",\"enter\":\"Title_enter__20bcm\",\"enterActive\":\"Title_enterActive__2qQFm\",\"exit\":\"Title_exit__1pkBW\",\"exitActive\":\"Title_exitActive__35cSm\"};","// import types from \"./phonebook-types\";\r\nimport shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"phonebook/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"phonebook/delete\");\r\nconst filter = createAction(\"phonebook/changeFilter\");\r\n\r\nexport default { addContact, deleteContact, filter };\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//   type: types.ADD,\r\n// payload: {\r\n//   id: shortid.generate(),\r\n//   name,\r\n//   number,\r\n// },\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const filter = (value) => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n","import { combineReducers } from \"redux\";\r\n// import types from \"./phonebook-types\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport action from \"./phonebook-action\";\r\n\r\nconst contacts = createReducer([], {\r\n  [action.addContact]: (state, { payload }) => [...state, payload],\r\n  [action.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [action.filter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\n// const contacts = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"phonebook/filter\":\r\n//       console.log(\"this is state\", state);\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n\r\n// import { combineReducers } from \"redux\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"../Form/Form.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookAction from \"../../redux/phonebook/phonebook-action\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  InputValues = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checkName = this.props.contactList({ name: this.state.name });\r\n    const chacNumer = this.state.number;\r\n\r\n    if (checkName) {\r\n      return toast.error(\"Это имя уже существует\");\r\n    }\r\n\r\n    if (chacNumer === \"\") {\r\n      return toast.error(\"Введите номер\");\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    this.resetInputValues();\r\n  };\r\n\r\n  resetInputValues = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const idName = shortid.generate();\r\n    const idNumber = shortid.generate();\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.addContact}>\r\n        <label htmlFor={idName} className={s.labelName}>\r\n          Имя\r\n        </label>\r\n        <input\r\n          id={idName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.InputValues}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <label htmlFor={idNumber} className={s.labelNumber}>\r\n          Номер\r\n        </label>\r\n        <input\r\n          id={idNumber}\r\n          type=\"tel\"\r\n          pattern=\"^[ 0-9]+$\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.InputValues}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <button className={s.btnForm} type=\"submite\">\r\n          Добавить контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(phonebookAction.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookAction from \"../../redux/phonebook/phonebook-action\";\r\n\r\nfunction Filter({ value, searchContact }) {\r\n  const id = shortid.generate();\r\n  console.log(\"this is value filter\", value);\r\n  return (\r\n    <div className={s.containerSearch}>\r\n      <label className={s.labelSearch} htmlFor={id}>\r\n        Поиск контакта по имени\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={searchContact}\r\n        id={id}\r\n        className={s.inputSearch}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const getFilter = (allContacts, filter) => {\r\n//   const filterValues = filter.toLowerCase();\r\n\r\n//   return allContacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(filterValues)\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.phonebook.filter,\r\n  // getFilter(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  searchContact: (e) => dispatch(phonebookAction.filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookAction from \"../../redux/phonebook/phonebook-action\";\r\n\r\nfunction СontactForm({ contactList, onDeleted }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" classNames={s.table}>\r\n      {contactList.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={s} unmountOnExit>\r\n            <li>\r\n              {name}: {number}\r\n              <button\r\n                className={s.btnList}\r\n                type=\"button\"\r\n                onClick={() => onDeleted(id)}\r\n              >\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nconst getFilter = (allContacts, filter) => {\r\n  const filterValues = filter.toLowerCase();\r\n  console.log(\"this is ALLCONT\", allContacts);\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filterValues)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\r\n  contactList: getFilter(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleted: (id) => dispatch(phonebookAction.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(СontactForm);\r\n","import React from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nfunction Title() {\r\n  return (\r\n    <div>\r\n      <h1 className={s.form}>Телефонная книга</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./components/Form/Form\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport СontactForm from \"./components/ContactForm/ContactForm\";\r\nimport style from \"./components/Title/Title.module.css\";\r\nimport s from \"./components/ContactForm/ContactForm.module.css\";\r\nimport Title from \"./components/Title/Title\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    // filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  // addContact = (contact) => {\r\n  //   this.setState({\r\n  //     contacts: [contact, ...this.state.contacts],\r\n  //   });\r\n  // };\r\n\r\n  // valuesFilter = (e) => {\r\n  //   const { name, value } = e.currentTarget;\r\n  //   this.setState({ [name]: value });\r\n  // };\r\n\r\n  // getFilter = () => {\r\n  //   const { filter, contacts } = this.state;\r\n  //   const filterValues = filter.toLowerCase();\r\n  //   return contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(filterValues)\r\n  //   );\r\n  // };\r\n\r\n  checkName = (newName) => {\r\n    return this.state.contacts.some(\r\n      ({ name }) => name === Object.values(newName).join(\"\")\r\n    );\r\n  };\r\n\r\n  // deletedContact = (contactId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: prevState.contacts.filter(\r\n  //       (contact) => contact.id !== contactId\r\n  //     ),\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    // const filterContact = this.getFilter();\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        {/*  */}\r\n        <ToastContainer autoClose={3000} />\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames={style}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <Title />\r\n        </CSSTransition>\r\n        <Form onSubmit={this.addContact} contactList={this.checkName} />\r\n        <h2 className={s.contactList}>Контакты</h2>\r\n        {/* <Filter velue={this.state.filter} searchContact={this.valuesFilter} /> */}\r\n        <Filter />\r\n        <СontactForm\r\n        // contactList={filterContact}\r\n        // onDeleted={this.deletedContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3VbGJ\",\"form\":\"ContactForm_form__sO6Fz\",\"contactList\":\"ContactForm_contactList__2_1yn\",\"btnList\":\"ContactForm_btnList__3yEbg\",\"table\":\"ContactForm_table__2PsVM\",\"enter\":\"ContactForm_enter__3cjs5\",\"enterActive\":\"ContactForm_enterActive__2oBuj\",\"exit\":\"ContactForm_exit__HXJpO\",\"exitActive\":\"ContactForm_exitActive__1wyVd\"};"],"sourceRoot":""}